language: node_js
node_js:
  - "stable"

cache:
  directory:
    - node_modules

addons:
  apt:
    update: true
    packages:
      - node-semver

before_install: true

install:
  - npm install

before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

script:
  - npm run test

# before_cache:
after_success:
  - git config --local user.name "Nonce CI-CD Worker"
  - git config --local user.name "dev@nonce.community"
  - CURRENT_VERSION=$(node -p "require('./package.json').version")
  - if [ "$TRAVIS_BRANCH" = "master" ]; then
      echo "on master branch";
      export TRAVIS_TAG=v$CURRENT_VERSION-release;
    fi;
  - if [ "$TRAVIS_BRANCH" = "develop" ]; then
      echo "on develop branch";
      PREV_RC=$(git tag -l "v$CURRENT_VERSION-rc*" | tail -1);
      if [ $PREV_RC ]; then
        export TRAVIS_TAG=v$(semver $PREV_RC -i prerelease --preid rc);
      else
        export TRAVIS_TAG=v$(semver $CURRENT_VERSION-rc.1);
      fi;
    fi;
  - echo "Version $TRAVIS_TAG is tagged"


# after_failure:

before_deploy:
  - npm run package-mac
  - npm run package-linux
  - tar czf builds/nonce-tools-app-darwin-x64.tar.gz builds/nonce-tools-app-darwin-x64
  - tar czf builds/nonce-tools-app-linux-x64.tar.gz builds/nonce-tools-app-linux-x64

# The api key is generated by james-lim@github.com
# deploy:
  #  - provider: releases
  #  api_key:
  #    secure: 
  #  file:
  #    - builds/nonce-tools-app-darwin-x64.tar.gz
  #    - builds/nonce-tools-app-linux-x64.tar.gz
  #  skip_cleanup: true
  #  overwrite: true
  #  on:
  #    branch: master
  #    repo: nonce-community/nonce-work-tools
  #    tags: true
  #- provider: releases
  #  api_key:
  #    secure: 
  #  file:
  #    - builds/nonce-tools-app-darwin-x64.tar.gz
  #    - builds/nonce-tools-app-linux-x64.tar.gz
  #  skip_cleanup: true
  #  overwrite: true
  #  prerelease: true
  #  on:
  #    branch: develop
  #    repo: nonce-community/nonce-work-tools
  #    tags: true

# after_deploy:
# after_script:
